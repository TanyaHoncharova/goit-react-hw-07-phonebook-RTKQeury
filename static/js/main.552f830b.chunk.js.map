{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","redux/contacts/ContactsSlice.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","Components/Title/Title.js","Components/Loader/Loader.js","Components/ContactForm/ContactForm.js","Components/ContactList/contacts.js","Components/ContactList/ContactList.js","redux/contacts/contacts-selectors.js","Components/Filter/Filter.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","contactApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","deleteContact","mutation","contactId","url","method","invalidatesTags","addContact","newContact","body","useFetchContactsQuery","useDeleteContactMutation","useAddContactMutation","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","itemsReduser","createReducer","_","payload","state","filter","id","loading","filterReducer","error","combineReducers","items","store","configureStore","reducer","contacts","contactsReducer","middleware","getDifaultMiddelware","Title","children","LoaderComponent","type","color","height","width","timeout","ContactForm","useState","name","setName","number","setNumber","data","nameInputId","isUpdating","shortid","generate","phoneInputId","handleInputChange","e","currentTarget","value","className","styles","form","onSubmit","event","preventDefault","currentName","find","toLowerCase","alert","coincidence","label","htmlFor","pattern","title","input","onChange","required","btn","Contacts","isDeliting","style","list","map","item","onClick","ContactList","isFetching","console","log","Loader","getFilter","createSelector","normalizedFilter","includes","connect","contactsSelectors","dispatch","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.552f830b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3cjKB\",\"label\":\"ContactForm_label__30xz_\",\"input\":\"ContactForm_input__1MclA\",\"btn\":\"ContactForm_btn__VuH5L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3hbGS\",\"item\":\"ContactList_item__3CmAt\",\"name\":\"ContactList_name__22b0q\",\"btn\":\"ContactList_btn__2m_E5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__PKc42\",\"btn\":\"Filter_btn__1vXzf\"};","\r\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nexport const contactApi = createApi({\r\n    reducerPath: 'contactApi',\r\n    baseQuery: fetchBaseQuery({\r\n        baseUrl: 'https://61226d55d44628001705484b.mockapi.io',\r\n    }),\r\n    tagTypes: ['Contact'],\r\n    endpoints: builder => ({\r\n        fetchContacts: builder.query({\r\n            query: () => `/contacts`,\r\n            providesTags: ['Contact'],\r\n        }),\r\n        deleteContact: builder.mutation({\r\n            query: contactId => ({\r\n                url: `/contacts/${contactId}`,\r\n                method: 'DELETE',\r\n            }),\r\n            invalidatesTags: ['Contact'],\r\n        }),\r\n        addContact: builder.mutation({\r\n            query: newContact => ({\r\n                url: '/contacts',\r\n                method: 'POST',\r\n                body: newContact,\r\n            }),\r\n            invalidatesTags: ['Contact'],\r\n        }),\r\n    }),\r\n});\r\n\r\nexport const {\r\n    useFetchContactsQuery,\r\n    useDeleteContactMutation,\r\n    useAddContactMutation,\r\n} = contactApi;","import { createAction } from '@reduxjs/toolkit';\r\n\r\n\r\nexport const fetchContactsRequest = createAction('contacts /fetchContactsRequest');\r\nexport const fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\r\nexport const fetchContactsError = createAction('contact/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts / addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contact/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('contacts / deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nexport const deleteContactError = createAction('contact/deleteContactError');\r\n\r\n\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n    addContactSuccess,\r\n    addContactRequest,\r\n    addContactError,\r\n    deleteContactSuccess,\r\n    deleteContactRequest,\r\n    deleteContactError,\r\n    fetchContactsRequest,\r\n    fetchContactsSuccess,\r\n    fetchContactsError,\r\n    changeFilter,\r\n} from './contacts-actions';\r\n\r\n\r\n\r\n\r\nconst itemsReduser = createReducer([], {\r\n    [fetchContactsSuccess]: (_, { payload }) => payload,\r\n    [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n    [deleteContactSuccess]: (state, { payload }) =>\r\n        state.filter(({ id }) => id !== payload),\r\n})\r\n\r\nconst loading = createReducer(false, {\r\n    [addContactRequest]: () => true,\r\n    [addContactSuccess]: () => false,\r\n    [addContactError]: () => false,\r\n    [deleteContactRequest]: () => true,\r\n    [deleteContactSuccess]: () => false,\r\n    [deleteContactError]: () => false,\r\n    [fetchContactsRequest]: () => true,\r\n    [fetchContactsSuccess]: () => false,\r\n    [fetchContactsError]: () => false,\r\n});\r\n\r\n\r\nconst filterReducer = createReducer('', {\r\n    [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {});\r\n\r\nexport default combineReducers({\r\n    items: itemsReduser,\r\n    filter: filterReducer,\r\n    loading,\r\n    error,\r\n});","import { contactApi } from './contacts/ContactsSlice'\r\nimport contactsReducer from './contacts/contacts-reducer';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\n\r\n\r\n\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: contactsReducer,\r\n        [contactApi.reducerPath]: contactApi.reducer,\r\n\r\n    },\r\n    middleware: getDifaultMiddelware => [\r\n        ...getDifaultMiddelware(),\r\n        contactApi.middleware,\r\n    ]\r\n});\r\n\r\nexport default store;\r\n","function Title({ children }) {\r\n    return (\r\n        <>\r\n            <h1>{children}</h1>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Title;\r\n","import Loader from \"react-loader-spinner\";\r\n\r\nconst LoaderComponent = () => {\r\n    return (\r\n        <Loader\r\n            type=\"Puff\"\r\n            color=\"#00BFFF\"\r\n            height={100}\r\n            width={100}\r\n            timeout={3000} //3 secs\r\n        />\r\n    );\r\n};\r\n\r\nexport default LoaderComponent;","import React, { useState } from 'react';\r\nimport LoaderComponent from '../Loader';\r\nimport { useFetchContactsQuery, useAddContactMutation } from '../../redux/contacts/ContactsSlice';\r\nimport store from \"../../redux/store\";\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\n\r\nimport styles from './ContactForm.module.css';\r\n\r\nconst ContactForm = () => {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const { data: contacts } = useFetchContactsQuery();\r\n    const [addContact, { isUpdating: isAdding }] = useAddContactMutation();\r\n\r\n    const nameInputId = shortid.generate();\r\n    const phoneInputId = shortid.generate();\r\n\r\n    const coincidence = currentName => {\r\n        if (!contacts) { return }\r\n\r\n        if (contacts.find(({ name }) => name.toLowerCase() === currentName)) {\r\n            alert(`${currentName} is already in contacts`);\r\n            return true;\r\n        }\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.currentTarget;\r\n\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    const handleSubmit = event => {\r\n        const newContact = { name, number };\r\n\r\n        event.preventDefault();\r\n        if (coincidence(name.toLowerCase())) return;\r\n\r\n        addContact(newContact);\r\n        setName('');\r\n        setNumber('');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* {isFetching && <LoaderComponent />} */}\r\n            < form\r\n                className={styles.form} onSubmit={handleSubmit} >\r\n                <>\r\n                    <label className={styles.label} htmlFor={nameInputId}>\r\n                        Name:\r\n                    </label>\r\n                    <input type=\"text\" name=\"name\" pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\" title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        className={styles.input}\r\n                        id={nameInputId}\r\n                        value={name}\r\n                        onChange={handleInputChange}\r\n                        required />\r\n\r\n                    <label className={styles.label} htmlFor={phoneInputId} >\r\n                        Number:\r\n                    </label>\r\n                    <input type=\"tel\" name=\"number\" id={phoneInputId}\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        className={styles.input} value={number} onChange={handleInputChange} required />\r\n\r\n                    <button type=\"submit\"\r\n                        className={styles.btn} >\r\n                        Add contact\r\n                    </button>\r\n                </>\r\n            </form >\r\n        </>\r\n    )\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport { useDeleteContactMutation } from '../../redux/contacts/ContactsSlice';\r\nimport style from './ContactList.module.css';\r\n\r\nconst Contacts = ({ contacts }) => {\r\n\r\n    const [deleteContact, { isUpdating: isDeliting }] = useDeleteContactMutation();\r\n    return (\r\n        <ul className={style.list}>\r\n            {contacts.map(({ id, name, number }) => {\r\n                return (\r\n                    <li key={id} className={style.item}>\r\n                        <span>{name}</span><span>{number}</span>\r\n                        <button\r\n                            className={style.btn}\r\n                            type=\"button\"\r\n                            id={id}\r\n                            onClick={() => deleteContact(id)}\r\n                        >\r\n                            {isDeliting ? 'Deliting...' : 'Delete'}</button>\r\n                    </li>\r\n                );\r\n            })}\r\n        </ul>\r\n    )\r\n};\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport Contacts from './contacts';\r\nimport Loader from '../Loader';\r\n\r\nimport { useFetchContactsQuery } from '../../redux/contacts/ContactsSlice';\r\n\r\n\r\n\r\nconst ContactList = () => {\r\n\r\n    const { data, error, isFetching } = useFetchContactsQuery();\r\n    console.log(data);\r\n    return (\r\n        <>\r\n            {isFetching && <Loader />}\r\n            {data && <Contacts contacts={data} />}\r\n\r\n        </>)\r\n};\r\n\r\n\r\nexport default ContactList;","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getLoading = state => state.contacts.loading;\r\nconst getFilter = state => state.contacts.filter;\r\nconst getAllContacts = state => state.contacts.items;\r\n\r\nconst getVisibleContacts = createSelector(\r\n    [getAllContacts, getFilter],\r\n    (contacts, filter) => {\r\n        const normalizedFilter = filter.toLowerCase();\r\n\r\n        return contacts.filter(({ name }) =>\r\n            name.toLowerCase().includes(normalizedFilter),\r\n        );\r\n    },\r\n);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { getLoading, getFilter, getVisibleContacts };\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\r\nimport contactsSelectors from '../../redux/contacts/contacts-selectors';\r\nimport styles from './Filter.module.css';\r\n\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n\r\n    return (\r\n        <div>\r\n\r\n            <p> Find contacts by name</p>\r\n            <input\r\n                type=\"text\"\r\n                className={styles.input}\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    value: contactsSelectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onChange: e => dispatch(changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\n","\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport Title from './Components/Title';\r\nimport ContactForm from './Components/ContactForm';\r\nimport ContactList from './Components/ContactList';\r\nimport Filter from './Components/Filter';\r\nimport './App.css';\r\n\r\n\r\nexport default function App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Title>Phonebook</Title>\r\n      <ContactForm />\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n// App.defaultProps = {\r\n//   totalContactsCount: null,\r\n//   visibleContactsCount: null\r\n// }\r\n// App.propTypes = {\r\n//   contacts: PropTypes.arrayOf(\r\n//     PropTypes.shape(\r\n//       {\r\n//         id: PropTypes.any.isRequired,\r\n//         name: PropTypes.string.isRequired,\r\n//         number: PropTypes.number.isRequired,\r\n//       })\r\n//   ),\r\n//   filter: PropTypes.string,\r\n//   totalContactsCount: PropTypes.number,\r\n//   visibleContacts: PropTypes.number,\r\n// };\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport store from './redux/store.js';\r\n// import { PersistGate } from 'redux-persist/integration/react'\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\r\n      <App />\r\n      {/* </PersistGate> */}\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}